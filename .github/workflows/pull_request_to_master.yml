name: Pull request into master

on:
  pull_request:
    branches: [ "master" ]
  # push:
  #   branches: [ "master"]

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: | # Flake8 is a package for linting and style guides in Python
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pip install pytest-cov
        pytest test.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

  auto_approve: # I think this one is better, see in status if it approves
    name: auto_approve
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
    - uses: hmarr/auto-approve-action@v2
      id: demo-1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

  merge: # Unable to work, error stating that "the branch is unmergable"
    name: Merge pull request 
    needs: approve
    runs-on: ubuntu-latest
    steps:
    - name: Merge pull request
      uses: juliangruber/merge-pull-request-action@v1
      # if: github.actor == 'dependabot[bot]' # can set it to only react to certain users, AKA a github actions bot
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        number: ${{ steps.demo-1.outputs.pull-request-number }}
        method: squash
        repo: GroningGustaf/private_django
